@page "/WorkerPage"
@using IntelVault.Infrastructure.Workers
@using System.Collections.ObjectModel
@rendermode InteractiveServer
@inject IWorkersGrpc Worker;
<h3>WorkerPage</h3>
@if (JobsList == null)
{
    <h1>Loading</h1>
}
else
{
  @*   <SfGrid DataSource="@_observableCollection"  AllowPaging="true">
        <GridColumns>
            <GridColumn Field="@nameof(QJobs.Name)" HeaderText="ID" TextAlign="TextAlign.Right" Width="100"></GridColumn>
            <GridColumn Field="@nameof(QJobs.Description)" HeaderText="Description" Width="150"></GridColumn>
            <GridColumn Field="@nameof(QJobs.StartDate)" HeaderText="StartDate" TextAlign="TextAlign.Left" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field="@nameof(QJobs.EndDate)" HeaderText="EndDate" TextAlign="TextAlign.Left" Type="ColumnType.Date" Width="100"></GridColumn>
            <GridColumn Field="@nameof(QJobs.Next)" HeaderText="Next" TextAlign="TextAlign.Left" Type="ColumnType.Date" Width="100"></GridColumn>
        </GridColumns>
    </SfGrid> *@

    <SfGrid DataSource="@_observableCollection">
        <GridTemplates>
            <RowTemplate Context="emp">
                @{
                    var job = (emp as QJobs);
                    // <td class="photo">
                    //     <img src="@($" scripts/Images/Employees/{employee.EmployeeID}.png")" alt="@employee.EmployeeID" />
                    // </td>
                    <td class="details">
                        <table class="CardTable" cellpadding="3" cellspacing="2">
                            <colgroup>
                                <col width="25%">
                                <col width="65%">

                                <col width="10%">
                            </colgroup>
                            <tbody>
                                <tr>
                                    <td class="CardHeader">Name </td>
                                    <td>@job.Name </td>
                                    <td><SfButton Content="stop" IsPrimary="true"></SfButton><SfButton Content="Start" IsPrimary="true"></SfButton></td>

                                </tr>
                                <tr>
                                    <td class="CardHeader">Description</td>
                                    <td>@job.Description </td>
                                </tr>
                                <tr>
                                    <td class="CardHeader">
                                        Title
                                    </td>
                                    <td>
                                        @job.Name
                                    </td>
                                </tr>
                                <tr>
                                    <td class="CardHeader">
                                        Start DTG
                                    </td>
                                    <td>
                                        @job.StartDate
                                    </td>
                                </tr>
                                <tr>
                                    <td class="CardHeader">
                                        End DTG
                                    </td>
                                    <td>
                                        @job.EndDate
                                    </td>
                                </tr>
                                <tr>
                                    <td class="CardHeader">
                                        Next DTG
                                    </td>
                                    <td>
                                        @job.Next
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                }
            </RowTemplate>
        </GridTemplates>
        <GridColumns>
            <GridColumn HeaderText="Job Running" Width="250" TextAlign="TextAlign.Left"> </GridColumn>

        </GridColumns>
    </SfGrid>

}
<style type="text/css" class="cssStyles">
    .photo img {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }

    .photo,
    .details {
        border-color: #e0e0e0;
        border-style: solid;
    }

    .photo {
        border-width: 1px 0px 0px 0px;
        text-align: center;
    }

    .details {
        border-width: 1px 0px 0px 0px;
        padding-left: 18px;
    }

    .e-bigger .details {
        padding-left: 25px;
    }

    .e-device .details {
        padding-left: 8px;
    }

    .details > table {
        width: 100%;
    }

    .CardHeader {
        font-weight: 600;
    }

    td {
        padding: 2px 2px 3px 4px;
    }
</style>


@code {
    public List<QJobs>? JobsList { get; private set; }
    private bool? _working;

    private ObservableCollection<QJobs>? _observableCollection;

    protected override async Task OnInitializedAsync()
    {
        JobsList = await Worker.GetJobs() as List<QJobs>;
        _working = await Worker.IsWorkerRunning();
        _observableCollection = await Worker.GetStreamingJobs();
    }
}
