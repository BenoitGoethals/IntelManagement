@rendermode InteractiveServer

@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div>
    <SfMenu @ref="Menu" TValue="MenuItem" CssClass="e-rounded-menu" >
        <MenuItems>
            <MenuItem Text="Home" Url="/"></MenuItem>
            <AuthorizeView>
                <NotAuthorized>
                    <MenuItem Text="Login" Url="/Account/login"></MenuItem>
                    <MenuItem Text="Account">
                        <MenuItems>
                            <MenuItem Text="Register" Url="/Account/Register"></MenuItem>
                            <MenuItem Text="Login" Url="/Account/login"></MenuItem>
                        </MenuItems>
                    </MenuItem>
                </NotAuthorized>
                <Authorized>
                    <MenuItem Text="Logout" Url="/Logout"></MenuItem>
                    <MenuItem Text="Intel Investigation" Url="overviewIntelInvestigationFile"></MenuItem>
                    <MenuItem Text="Add intel">
                        <MenuItems>
                            <MenuItem Text="Informant view" Url="InformantView"></MenuItem>
                            <MenuItem Text="OpenSource" Url="OpenSource"></MenuItem>
                            <MenuItem Text="SocialMedia" Url="SocialMedia"></MenuItem>
                            <MenuItem Text="General Intel" Url="GeneralIntelView"></MenuItem>
                            <MenuItem Text="Cyber Intelligence" Url="CybIntel"></MenuItem>
                            <MenuItem Text="Person Of Interest" Url="PersonInterest"></MenuItem>
                            <MenuItem Text="Human Intel" Url="HumanIntel"></MenuItem>
                        </MenuItems>
                    </MenuItem>
                    <MenuItem Text="DocumentUploaderView" Url="DocumentUploaderView"></MenuItem>
                    <MenuItem Text="Account">
                        <MenuItems>
                            <MenuItem Text="Logout" Url="/Logout"></MenuItem>
                            <MenuItem Text="Customize"></MenuItem>
                            <MenuItem Text="Options"></MenuItem>
                        </MenuItems>
                    </MenuItem>

                </Authorized>
            </AuthorizeView>
        </MenuItems>
    </SfMenu>

</div>
<style>

    /* Styles to achieve rounder corner in menu */
    .e-menu-container.e-rounded-menu:not(.e-menu-popup),
    .e-menu-container.e-rounded-menu .e-menu {
        border-radius: 20px;
    }

    /* Increased the menu component left and right padding for better rounded corner UI */
    .e-menu-container.e-rounded-menu ul.e-menu {
        padding: 0 14px;
    }

</style>


@code {
    private AuthenticationState? _authenticationState;
    private SfMenu<MenuItem> Menu;
    protected override async Task OnInitializedAsync()
    {
       
        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = _authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            // Access user information
            var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            var userName = user.Identity.Name;
            // ... other claims or properties
        }
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }


}

